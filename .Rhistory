for (i in id){
if(i < 10){
myfile <- paste(getwd(), "/", directory, "/00", i, '.csv', sep='')
}
if(i>=10 & i < 100){
myfile <- paste(getwd(), "/", directory, "/0", i, '.csv', sep='')
}
if(i >= 100){
myfile <- paste(getwd(), "/", directory, "/", i, '.csv', sep='')
}
data <- read.csv(myfile)
bad <- is.na(data)
data <- data[!bad]
print(head(data))
#means = means + mean(data[,pollutant], na.rm = TRUE)
#print(mean(data[,pollutant], na.rm = TRUE))
#print(means)
#data <- data[complete.cases(data),]
#meanvalue <- meanvalue + mean(data[pollutant])
#print(data$pollutant)
}
data[pollutant]
}
z <- pollutantmean("specdata", "nitrate", 70:72)
z
pollutantmean <- function(directory, pollutant, id = 1:332) {
means = c()
for (i in id){
if(i < 10){
myfile <- paste(getwd(), "/", directory, "/00", i, '.csv', sep='')
}
if(i>=10 & i < 100){
myfile <- paste(getwd(), "/", directory, "/0", i, '.csv', sep='')
}
if(i >= 100){
myfile <- paste(getwd(), "/", directory, "/", i, '.csv', sep='')
}
data <- read.csv(myfile)
means <- c(means, data[pollutant])
#bad <- is.na(data)
#data <- data[!bad]
#print(head(data))
#means = means + mean(data[,pollutant], na.rm = TRUE)
#print(mean(data[,pollutant], na.rm = TRUE))
#print(means)
#data <- data[complete.cases(data),]
#meanvalue <- meanvalue + mean(data[pollutant])
#print(data$pollutant)
}
means
}
z <- pollutantmean("specdata", "nitrate", 70:72)
z
pollutantmean <- function(directory, pollutant, id = 1:332) {
means = c()
for (i in id){
if(i < 10){
myfile <- paste(getwd(), "/", directory, "/00", i, '.csv', sep='')
}
if(i>=10 & i < 100){
myfile <- paste(getwd(), "/", directory, "/0", i, '.csv', sep='')
}
if(i >= 100){
myfile <- paste(getwd(), "/", directory, "/", i, '.csv', sep='')
}
data <- read.csv(myfile)
means <- c(means, data[pollutant])
#bad <- is.na(data)
#data <- data[!bad]
#print(head(data))
#means = means + mean(data[,pollutant], na.rm = TRUE)
#print(mean(data[,pollutant], na.rm = TRUE))
#print(means)
#data <- data[complete.cases(data),]
#meanvalue <- meanvalue + mean(data[pollutant])
#print(data$pollutant)
}
mean(means, na.rm = TRUE)
}
z <- pollutantmean("specdata", "nitrate", 70:72)
z
pollutantmean <- function(directory, pollutant, id = 1:332) {
means = c()
for (i in id){
if(i < 10){
myfile <- paste(getwd(), "/", directory, "/00", i, '.csv', sep='')
}
if(i>=10 & i < 100){
myfile <- paste(getwd(), "/", directory, "/0", i, '.csv', sep='')
}
if(i >= 100){
myfile <- paste(getwd(), "/", directory, "/", i, '.csv', sep='')
}
data <- read.csv(myfile)
bad <- is.na(data)
data <- data[!bad]
print(head(data))
means <- c(means, data[,pollutant])
#bad <- is.na(data)
#data <- data[!bad]
#print(head(data))
#means = means + mean(data[,pollutant], na.rm = TRUE)
#print(mean(data[,pollutant], na.rm = TRUE))
#print(means)
#data <- data[complete.cases(data),]
#meanvalue <- meanvalue + mean(data[pollutant])
#print(data$pollutant)
}
mean(means)
}
z <- pollutantmean("specdata", "nitrate", 70:72)
pollutantmean <- function(directory, pollutant, id = 1:332) {
means = c()
for (i in id){
if(i < 10){
myfile <- paste(getwd(), "/", directory, "/00", i, '.csv', sep='')
}
if(i>=10 & i < 100){
myfile <- paste(getwd(), "/", directory, "/0", i, '.csv', sep='')
}
if(i >= 100){
myfile <- paste(getwd(), "/", directory, "/", i, '.csv', sep='')
}
data <- read.csv(myfile)
current <- data[!is.na(data[ ,pollutant]),pollutant]
means <- c(means, current)
#bad <- is.na(data)
#data <- data[!bad]
#print(head(data))
#means = means + mean(data[,pollutant], na.rm = TRUE)
#print(mean(data[,pollutant], na.rm = TRUE))
#print(means)
#data <- data[complete.cases(data),]
#meanvalue <- meanvalue + mean(data[pollutant])
#print(data$pollutant)
}
mean(means)
}
z <- pollutantmean("specdata", "nitrate", 70:72)
z
submit()
source("submitscript1.R")
submit()
pollutantmean <- function(directory, pollutant, id = 1:332) {
means = c()
for (i in id){
if(i < 10){
myfile <- paste(getwd(), "/", directory, "/00", i, '.csv', sep='')
}
if(i>=10 & i < 100){
myfile <- paste(getwd(), "/", directory, "/0", i, '.csv', sep='')
}
if(i >= 100){
myfile <- paste(getwd(), "/", directory, "/", i, '.csv', sep='')
}
data <- read.csv(myfile)
current <- data[!is.na(data[ ,pollutant]),pollutant]
means <- c(means, current)
#bad <- is.na(data)
#data <- data[!bad]
#print(head(data))
#means = means + mean(data[,pollutant], na.rm = TRUE)
#print(mean(data[,pollutant], na.rm = TRUE))
#print(means)
#data <- data[complete.cases(data),]
#meanvalue <- meanvalue + mean(data[pollutant])
#print(data$pollutant)
}
round(mean(means),3)
}
z <- pollutantmean("specdata", "nitrate", 70:72)
z
submit()
z<-pollutantmean("specdata", "sulfate", 1:10)
z
z<-pollutantmean("specdata", "nitrate", 23)
z
pollutantmean <- function(directory, pollutant, id = 1:332) {
means = c()
for (i in id){
if(i < 10){
myfile <- paste(getwd(), "/", directory, "/00", i, '.csv', sep='')
}
if(i>=10 & i < 100){
myfile <- paste(getwd(), "/", directory, "/0", i, '.csv', sep='')
}
if(i >= 100){
myfile <- paste(getwd(), "/", directory, "/", i, '.csv', sep='')
}
data <- read.csv(myfile)
current <- data[!is.na(data[ ,pollutant]),pollutant]
means <- c(means, current)
#bad <- is.na(data)
#data <- data[!bad]
#print(head(data))
#means = means + mean(data[,pollutant], na.rm = TRUE)
#print(mean(data[,pollutant], na.rm = TRUE))
#print(means)
#data <- data[complete.cases(data),]
#meanvalue <- meanvalue + mean(data[pollutant])
#print(data$pollutant)
}
round(mean(means),3)
}
z<-pollutantmean("specdata", "nitrate", 23)
z
z<-pollutantmean("specdata", "sulfate", 1:10)
z
submit()
submit()
2
submit()
submit()
submit()
dir()
ls()
ls
ls()
dir
Q
qqq()
q()
ды
ls
dir()
dir
undebug(ls)
ls
debug(ls)
ls
undebug(ls)
undebug(ls)
Q
Q
undebug(ls)
ls
debug(ls)
ls
Q
undebug(ls)
undebug(ls)
undebug(ls)
ls
dir
fu
?dir
paste
args(paste)
esc
q
q()
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot(x,y)
sample(1:10,4)
rpof(plot(x,y))
Rprof(plot(x,y))
lm(x)
lm(x~y)
lm(x=y)
y
x
lm(x~y)
getwd()
cd "C:/Users/Дмитрий/"
ls
ls()
cd "C:/Users/Дмитрий"
cd "C:/Users"
undebug(ls)
undebug(ls())
ls
ls
ls
Q
dir
chdir
pwd
pwd()
setwd("CC:/Users/Дмитрий")
setwd("C:/Users/Дмитрий")
getwd()
setwd("C:/Users/Дмитрий/GitHub")
getwd()
ls()
ls()
source('C:/Users/Дмитрий/GitHub/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Дмитрий/R/vector_cache.R')
makeVector(1:10)
cachemean()
cachemean(1:10)
cachemean(x)
x
cachemean(1)
cachemean(1:10)
makeVector(1:10)
makeVector()
set1 <- makeVector(2)
set1(1:10)
set1
set1 <- makeVector(1:10)
set1(1)
y=1
makeVector(1:10)
z = makeVector(1:10)
z
globalenv()
globalenv
contour(volcano)
filled.contour(volcano)
z = makeVector(1:10)
z$set()
z$set(2)
z
z$get()
z
z$setmean(3)
z$setmean()
z$setmean(3)
z$getmean()
z[]
z()
cachemean(z)
cachemean(1:10)
y <- 1:20
cachemean(y)
z$setmean(NULL)
cachemean(z)
z<-makeVector(1:10)
alfa <- makeVector(1:10)
cachemean(alfa)
cachemean(alfa)
str(alfa)
ls()
alfa$getmean()
mat <- matrix[1:4,2]
mat <- matrix(1:4,2)
mat
solve(mat)
mat2 = matrix (2:5,2)
solve(mat, mat2)
mat2
source('C:/Users/Дмитрий/GitHub/ProgrammingAssignment2/cachematrix.R')
test = matrix(1:4,2)
test = makeCacheMatrix(test)
cacheSolve(test)
cacheSolve(test)
source('C:/Users/Дмитрий/GitHub/ProgrammingAssignment2/cachematrix.R')
cacheSolve(test)
source('C:/Users/Дмитрий/GitHub/ProgrammingAssignment2/cachematrix.R')
test$get()
test
test = makeCacheMatrix(matrix(1:4,2))
test
test$get()
cacheSolve(test)
test = makeCacheMatrix(matrix(1:6,3))
cacheSolve(test)
test$get()
test = makeCacheMatrix(matrix(1:9,3))
test$get()
cacheSolve(test)
cacheSolve(test)
test = makeCacheMatrix(matrix(1:16,4))
test$get()
cacheSolve(test)
test = makeCacheMatrix(matrix(rnorm(1:16),4))
test$get()
cacheSolve(test)
test = makeCacheMatrix(matrix(rnorm(1:16, 8),4))
test$get()
cacheSolve(test)
cacheSolve(test)
source('C:/Users/Дмитрий/GitHub/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Дмитрий/GitHub/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Дмитрий/GitHub/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Дмитрий/GitHub/cachematrix.R')
version()
version
pbeta(.75, 2, 1)
0.75 * 0ю75
0.75 * 0.75
йbeta(.5, 2, 1)
qbeta(.5, 2, 1)
plot(1, c(0,1))
plot(c(0,1,1), c(0,2,0))
plot(c(0,1,1), c(0,2,0), type='l')
lines(c(0.6,0), c(0.6, 1))
lines(c(0.6,0.6), c(0, 1))
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
install.packages("UsingR")
library(UsingR)
data("galton")
install.packages("RMySQL")
file = dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
install.packages("RMySQL")
library("RMySQL")
library(RMySQL)
file = dbConnect(MySQL(), user = "genome", host = "genome-mysql.cse.ucsc.edu")
result = dbGetQuery(file, "show databases;")
result
dbDisconnect(file)
install.packages("rhdf5")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
con = url("http://scholar.gogle.com/citations?user=HI-I6C0AAAAJ&hl=en")
con
ls()
rm(above,above10,add2,alfa,cachemean())
rm(above,above10,add2,alfa,cachemean
)
ls()
rm(cacheSolve,columns,data,makeCacheMatrix,makeVector,mat,mat2,set1,test,x,y)
ls()
rm(z)
ls()
ls()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?panel.lmline
?text
?points
?axis
?text
?par
?trellis.par.set
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
?qplot
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?geom_bar
?geom_point
?"ggplot"
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
movies$rating
movies$title
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
g + geom_point()
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + geom_line()
qplot(votes, rating, data = movies) + geom_linerange()
qplot(votes, rating, data = movies) + geom_polygon()
setwd("C:/Users/Дмитрий/GitHub/reproducible_research")
data = read.csv("activity.csv")
for(i in 1:NROW(data)){
if(is.na(data$steps[i])){
interv = data$interval[i]
value = avgint[avgint$interval == interv, 2]
data$steps[i] = value
}
}
avgint = aggregate(steps ~ interval, clear_data, mean)
clear_data = na.omit(data)
avgint = aggregate(steps ~ interval, clear_data, mean)
for(i in 1:NROW(data)){
if(is.na(data$steps[i])){
interv = data$interval[i]
value = avgint[avgint$interval == interv, 2]
data$steps[i] = value
}
}
library(ggplot2)
data = cbind(data, c("weekday_end"))
names(data) = c("steps", "date", "interval", "weekday_end")
data['weekday_end'] = weekdays(as.Date(data$date))
data$weekday_end[data$weekday_end %in% c("Saturday", "Sunday")] = "weekend"
data$weekday_end[data$weekday_end != "weekend"] = "weekday"
navgint = aggregate(data$steps, FUN = mean,
list(interval = data$interval, weekday_end = data$weekday_end))
qplot(steps, interval, data=navgint, color=weekday_end, xlab = "Average number of steps", ylab="Intervals", main ="Total number of steps taken per day")
summary(navgint)
navgint
data = read.csv("activity.csv")
for(i in 1:NROW(data)){
if(is.na(data$steps[i])){
interv = data$interval[i]
value = avgint[avgint$interval == interv, 2]
data$steps[i] = value
}
}
data = cbind(data, c("weekday_end"))
names(data) = c("steps", "date", "interval", "weekday_end")
data['weekday_end'] = weekdays(as.Date(data$date))
data$weekday_end[data$weekday_end %in% c("Saturday", "Sunday")] = "weekend"
data$weekday_end[data$weekday_end != "weekend"] = "weekday"
navgint = aggregate(data$steps, FUN = mean,
list(interval = data$interval, weekday_end = data$weekday_end))
navgint
data['weekday_end'] = weekdays(as.Date(data$date))
head(data)
Sys.setlocale("LC_ALL","English")
setwd("C:/Users/Р”РјРёС‚СЂРёР№/GitHub/")
setwd("C:/Users/Дмитрий/GitHub/reproducible_research")
